# source: http://blank-1.local/bitrix/tools/wjs_api_graphql.php
# timestamp: Sun Mar 29 2020 14:19:12 GMT+0300 (Moscow Standard Time)

"""
Язык, произвольное выражение на котором сможет выполнить (вычислить) сервер.
"""
enum EvaluationLanguage {
  """PHP"""
  PHP

  """SQL"""
  SQL
}

type EvaluationResult {
  output: String!
  result: String!
}

type Group {
  ID: ID!
  NAME: String
  USERS: [User]
}

input GroupFilterInput {
  ID: ID
  NAME: String
}

type Inspect {
  version: String
  evaluate(language: EvaluationLanguage!, source: String!): EvaluationResult
}

input ModuleEventSetInput {
  main: [ModuleMainEvents!]
  iblock: [ModuleIblockEvents!]
  form: [ModuleFormEvents!]
}

"""Поддерживаемые события модуля 'form'."""
enum ModuleFormEvents {
  """OnBeforeResultAdd"""
  OnBeforeResultAdd

  """OnAfterResultAdd"""
  OnAfterResultAdd
}

"""Поддерживаемые события модуля 'iblock'."""
enum ModuleIblockEvents {
  """OnBeforeIBlockElementUpdate"""
  OnBeforeIBlockElementUpdate

  """OnAfterIBlockElementUpdate"""
  OnAfterIBlockElementUpdate
}

"""Поддерживаемые события главного модуля."""
enum ModuleMainEvents {
  """OnBeforeEventAdd"""
  OnBeforeEventAdd

  """OnBeforeEventSend"""
  OnBeforeEventSend
}

type Mutation {
  inspectEventsSubscribe(clientId: String!, events: ModuleEventSetInput!): String
  inspectEventsUnsubscribe(clientId: String!): String
}

type Query {
  user(by: String = "ID", order: String = "ASC", filter: UserFilterInput = {}): User
  group(by: String = "ID", order: String = "ASC", filter: GroupFilterInput = {}): Group
  inspect: Inspect
}

type User {
  ID: ID!
  LOGIN: String!
  EMAIL: String!
  GROUPS: [Group]
}

input UserFilterInput {
  ID: ID
  NAME: String
}
